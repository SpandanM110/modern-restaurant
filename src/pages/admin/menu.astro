---
import AdminLayout from '../../layouts/AdminLayout.astro';
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();
const menuItems = await prisma.menuItem.findMany();
---

<AdminLayout title="Menu Management">
  <div class="p-6">
    <div class="flex justify-between mb-6">
      <h1 class="text-2xl font-bold">Menu Management</h1>
      <button 
        id="addItemBtn"
        class="bg-orange-500 text-white px-4 py-2 rounded-lg"
      >
        Add New Item
      </button>
    </div>

    <div class="grid gap-6">
      {menuItems.map(item => (
        <div class="bg-white p-4 rounded-lg shadow flex justify-between items-center">
          <div>
            <h3 class="font-semibold">{item.name}</h3>
            <p class="text-gray-600">{item.description}</p>
            <p class="text-orange-500">${item.price.toFixed(2)}</p>
          </div>
          <div class="space-x-2">
            <button 
              class="edit-btn bg-blue-500 text-white px-3 py-1 rounded"
              data-id={item.id}
            >
              Edit
            </button>
            <button 
              class="delete-btn bg-red-500 text-white px-3 py-1 rounded"
              data-id={item.id}
            >
              Delete
            </button>
          </div>
        </div>
      ))}
    </div>
  </div>

  <!-- Add/Edit Modal -->
  <div id="menuModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
    <div class="bg-white p-6 rounded-lg w-full max-w-md">
      <h2 class="text-xl font-bold mb-4" id="modalTitle">Add Menu Item</h2>
      <form id="menuForm" class="space-y-4">
        <input type="hidden" id="itemId">
        <div>
          <label class="block text-gray-700 mb-2">Name</label>
          <input type="text" id="name" class="w-full border rounded p-2">
        </div>
        <div>
          <label class="block text-gray-700 mb-2">Description</label>
          <textarea id="description" class="w-full border rounded p-2"></textarea>
        </div>
        <div>
          <label class="block text-gray-700 mb-2">Price</label>
          <input type="number" id="price" step="0.01" class="w-full border rounded p-2">
        </div>
        <div>
          <label class="block text-gray-700 mb-2">Category</label>
          <select id="category" class="w-full border rounded p-2">
            <option>Starters</option>
            <option>Main Course</option>
            <option>Desserts</option>
          </select>
        </div>
        <div class="flex justify-end space-x-2">
          <button type="button" id="cancelBtn" class="bg-gray-500 text-white px-4 py-2 rounded">Cancel</button>
          <button type="submit" class="bg-orange-500 text-white px-4 py-2 rounded">Save</button>
        </div>
      </form>
    </div>
  </div>
</AdminLayout>

<script>
  const modal = document.getElementById('menuModal');
  const form = document.getElementById('menuForm');
  const addBtn = document.getElementById('addItemBtn');
  const cancelBtn = document.getElementById('cancelBtn');

  // Show modal
  addBtn.addEventListener('click', () => {
    modal.classList.remove('hidden');
    form.reset();
  });

  // Hide modal
  cancelBtn.addEventListener('click', () => {
    modal.classList.add('hidden');
  });

  // Form submit
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());
    
    try {
      const response = await fetch('/api/menu', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });
      
      if (response.ok) {
        modal.classList.add('hidden');
        window.location.reload();
      }
    } catch (error) {
      console.error('Error:', error);
    }
  });

  // Delete button handler
  document.querySelectorAll('.delete-btn').forEach(btn => {
    btn.addEventListener('click', async () => {
      if (confirm('Are you sure you want to delete this item?')) {
        const id = btn.dataset.id;
        try {
          await fetch(`/api/menu/${id}`, { method: 'DELETE' });
          window.location.reload();
        } catch (error) {
          console.error('Error:', error);
        }
      }
    });
  });
</script>